<#@ template language="C#" debug="true" hostSpecific="true"  #>
<#@ output extension="log" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="$(TargetPath)" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Threading" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="FontAwesome.WPF.Generate" #>
<#@ import namespace="System.Diagnostics" #>
<#@ include file="Utils.tt" #>
<#
	Directory.SetCurrentDirectory(Path.GetDirectoryName(Host.TemplateFile));

	var folderProject = Directory.GetCurrentDirectory();
	var folderSolution = Directory.GetParent(folderProject).FullName;
	var folderRepo = Directory.GetParent(folderSolution).FullName;
	var configFile = Path.Combine(folderRepo, @"Font-Awesome\_config.yml");
	var outputFile = Path.Combine(folderSolution, @"FontAwesome.WPF\FontAwesomeControl.Generated.cs");
	var interop = new FontAwesomeInterop(configFile);
    
	var baseUrl = String.Format("{0}/{1}/{{0}}/", interop.Config.Url, interop.Container.IconDestination);
	
	WriteAutoGenerated();

	WriteLine("namespace FontAwesome.WPF {");
	PushIndent("\t");
	WriteLine("using System.Windows.Media;");

	WriteLine("public abstract partial class FontAwesomeControl {");
	PushIndent("\t");
	WriteLine("/// <summary>Factory method to create a FontAwesomePathControl for the specified FontAwesomeIcon</summary>");
	WriteLine("/// <param name=\"icon\">The FontAwesomeIcon to be created</param>");
	WriteLine("/// <returns>A new FontAwesomePathControl</returns>");
	WriteLine("public static FontAwesomeControl Create(FontAwesomeIcon icon) {");
	PushIndent("\t");
	WriteLine("switch(icon) {");

	PushIndent("\t");
	foreach(var item in interop.Items) {
		WriteLine("case FontAwesomeIcon.{0}: return new {0}();", item.SafeName);
	}
	PopIndent();
	WriteLine("}");
	WriteLine("return null;");
	PopIndent();
	WriteLine("}");
	PopIndent();
	WriteLine("}");
	PopIndent();
	WriteLine("}");
	SaveOutput(outputFile);

#>